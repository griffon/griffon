/*
 * Copyright 2016-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        mavenLocal()
    }

    dependencies {
        classpath 'org.codehaus.griffon:gradle-griffon-plugin:2.16.0-SNAPSHOT'
        classpath 'gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.39.0'
        classpath 'gradle.plugin.net.nemerosa:versioning:2.15.1'
    }
}

apply plugin: 'groovy'
apply plugin: 'org.codehaus.griffon.griffon'

griffon {
    disableDependencyResolution = false
    includeGroovyDependencies = false
    version = '2.16.0-SNAPSHOT'
    toolkit = 'javafx'
}

ext {
    macosx = System.getProperty('os.name').contains('Mac OS')
}

mainClassName = 'org.example.Launcher'

apply from: 'gradle/code-quality.gradle'
apply plugin: 'com.github.ben-manes.versions'

dependencies {
    api "org.codehaus.griffon:griffon-guice:${griffon.version.get()}"
    api 'org.kordamp.ikonli:ikonli-javafx:2.1.1'
    api 'org.kordamp.ikonli:ikonli-fontawesome-pack:2.1.1'
    api 'org.kordamp.bootstrapfx:bootstrapfx-core:0.2.2'

    runtimeOnly "org.slf4j:slf4j-simple:${slf4jVersion}"

    testImplementation "org.codehaus.griffon:griffon-javafx-test:${griffon.version.get()}"
    testImplementation 'pl.pragmatists:JUnitParams:1.1.1'
    testImplementation 'org.mockito:mockito-core:2.15.1'
}

compileGroovy.enabled = false

startScripts {
    doLast {
        if (!macosx) unixScript.text = unixScript.text.replaceAll('"(-Xdock:(name|icon)=)([^"]*?)(")', ' ')
        windowsScript.text = windowsScript.text.replaceAll('"(-Xdock:(name|icon)=)([^"]*?)(")', ' ')
    }
}

if (hasProperty('debugRun') && ((project.debugRun as boolean))) {
    run {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
    }
}
/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2008-2021 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'org.jbake.site'
}

jbake {
    configuration['asciidoctor.attributes.export'] = true
    configuration['asciidoctor.attributes.export.prefix'] = 'jbake-'
    configuration['griffon.version.current'] = project.version
    configuration['griffon.version.previous'] = rootProject.previousVersion
    configuration['project-build-dir'] = project.buildDir.absolutePath
    configuration['project-rootdir'] = rootProject.projectDir.absolutePath
    configuration['branch'] = 'development_2_x'

    version = '2.6.5'
    // asciidoctorjVersion = '1.5.7'
    freemarkerVersion = '2.3.31'
    groovyTemplatesVersion = groovyVersion
    thymeleafVersion = '3.0.12.RELEASE'
    jade4jVersion = '1.3.2'
    // flexmarkVersion = '0.34.24'
}

task(guide, dependsOn: [':griffon-guide:createGuide']) {
    // generates guide on the spot
}

task(copyGuide, type: Copy) {
    destinationDir = file("$buildDir/guide")
    from(tasks.getByPath(':griffon-guide:createGuide').destinationDir) {
        into project.version
    }
}

task(site, type: Copy, dependsOn: [bake, copyGuide]) {
    destinationDir = file("$buildDir/site")
    from file(bake.output)
    from(copyGuide.destinationDir) {
        into 'guide'
    }

    doLast {
        copy {
            into file("${destinationDir}/reports/${project.version}")
        }
    }
}

bakePreview {
    dependsOn site
    input = site.destinationDir
}

task(siteZip, type: Zip, dependsOn: site) {
    archiveBaseName.set 'griffon-site'
    from site.destinationDir
}
